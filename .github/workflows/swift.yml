# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Build ans test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]
        swift: ["5.9", "5.10"]
    steps:
    - uses: SwiftyLab/setup-swift@latest
      with:
        swift-version: ${{ matrix.swift }}
    - name: Get swift version
      run: swift --version
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test
  
# on:
#   push:
#     tags:
#       - "*.*.*"

# concurrency:
#   group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
#   cancel-in-progress: true

# env:
#   DEVELOPER_DIR: /Applications/Xcode_15.2.app/Contents/Developer

# jobs:
#   test_apple_platforms:
#     name: Test on iOS and macOS
#     runs-on: macOS-13
#     strategy:
#       matrix:
#         destination:
#           - "platform=macOS"
#           - "platform=iOS Simulator,name=iPhone 12"

#     steps:
#       - uses: actions/checkout@v4
#       - name: Test platform ${{ matrix.destination }}
#         run: set -o pipefail && xcodebuild -scheme XcodeCloudKit -destination "${{ matrix.destination }}" test | xcbeautify

#   test_linux:
#     name: Test Linux
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Install swiftly
#         run: curl -L https://swift-server.github.io/swiftly/swiftly-install.sh | bash -s -- -y
#       - name: Install the latest Swift toolchain
#         run: swiftly install latest
#       - name: Test
#         run: swift test

#   release:
#     needs: [test_apple_platforms, test_linux]
#     name: Create a new GitHub release
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: woke
#         uses: get-woke/woke-action@v0
#         with:
#           fail-on-error: true
#       - name: Release
#         uses: softprops/action-gh-release@v2
#         with:
#           generate_release_notes: true
#           token: ${{ secrets.GITHUB_TOKEN }}

# # name: Swift

# # on:
# #   push:
# #     branches: [ "master" ]
# #   pull_request:
# #     branches: [ "master" ]

# # jobs:
# #   build:
# #     name: Swift on ${{ matrix.os }}
# #     strategy:
# #       matrix:
# #         os: [ubuntu-latest, macos-latest]
# #     runs-on: ${{ matrix.os }}
# #     steps:
# #       - uses: swift-actions/setup-swift@v2
# #       - name: Get swift version
# #         run: swift --version
# #       - uses: actions/checkout@v4
# #       - name: Build
# #         run: swift build
# #       - name: Run tests
# #         run: swift test
